name: ‚öôÔ∏è

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        experimental: [false]
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          - "pypy-3.10"
#        include:
#          - python-version: "3.14"
#            experimental: true
#            experimental-format: (üß™)

    name: Test with Python ${{ matrix.python-version }} ${{ matrix.experimental-format }}

    steps:
    - uses: actions/checkout@master
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - name: Install tox
      run: python -m pip install --upgrade tox tox-gh-actions
    - name: Run tox
      run: tox
    - name: Publish coverage
      run:
        rm -rf ./.mypy_cache/;
        bash <(curl https://codecov.io/bash)
  build:
    needs: [test]

    name: Build package
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"

    - name: Install build dependencies
      run: pip install build twine

    - name: Build the package
      run: python -m build

    - name: Check the package
      run: twine check dist/*

  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [build]

    name: Publish package to PyPI
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install build dependencies
        run: pip install build

      - name: Build (again) the package
        run: python -m build

      - name: Publish package üì¶ to PyPI üéâ
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
