[tox]
isolated_build = true
envlist = py37, py38, py39, py310, py311, pypy37, pypy38, pypy39, checks, docs

[testenv]
description = Run the pytest suite
setenv =
    PYTHONDEVMODE=1
extras = test
# see pyproject.toml for the list of dependencies in the "test" extra
commands =
    pytest -V
    python -c 'import sys, pkg_resources; dist = pkg_resources.get_distribution("ics"); print(repr(dist), dist.__dict__, sys.path)'
    python -c 'import time; print((time.timezone, time.altzone, time.daylight, time.tzname, time.time()))'
    pytest --basetemp="{envtmpdir}" {posargs}

[testenv:flake8]
description = Run the flake8 code style checks
extras = checks
commands =
    flake8 --version
    flake8 src/

[testenv:mypy]
description = Run the mypy type checks
extras = checks
commands =
    mypy -V
    mypy --non-interactive --install-types --config-file=tox.ini src/

[testenv:checks]
description = Run all code checkers (flake8 and mypy)
extras = checks
commands =
    {[testenv:flake8]commands}
    {[testenv:mypy]commands}

[testenv:docs]
description = Build the documentation with sphinx
extras = docs
commands =
    sphinx-build -d "{toxworkdir}/docs_doctree" doc "{toxworkdir}/docs_out" --color -bhtml {posargs}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310, checks, docs
    3.11: py311
    pypy-3.7: pypy37
    pypy-3.8: pypy38
    pypy-3.9: pypy39


[pytest]
python_files = *.py
norecursedirs = dist venv .git .hypothesis .mypy_cache .pytest_cache .tox .eggs .cache ics.egg-info
testpaths = doc tests
addopts =
    --doctest-glob='*.rst' --doctest-modules
    --ignore doc/conf.py
    --hypothesis-show-statistics
    --cov=ics --cov-report=xml
    -s

[flake8]
# http://flake8.pycqa.org/en/latest/user/error-codes.html
# https://pycodestyle.readthedocs.io/en/latest/intro.html#error-codes
ignore =
# Ignore those as black already does the job
    E127
    E128
    E203
    E251
    E501
    E701
    E704
    W503

# E402  module level import not at top of file
    E402
# E731  do not assign a lambda expression, use a def
    E731
# F401  module imported but unused
    F401
# F403  ‘from module import *’ used; unable to detect undefined names
    F403

[mypy]
python_version = 3.10
warn_unused_configs = True
show_error_codes = True
